def celsius_to_fahrenheit(celsius):
  return (celsius * 9/5) + 32

def celsius_to_kelvin(celsius):
  return celsius + 273.15

def fahrenheit_to_celsius(fahrenheit):
  return (fahrenheit - 32) * 5/9

def fahrenheit_to_kelvin(fahrenheit):
  return (fahrenheit + 459.67) * 5/9

def kelvin_to_celsius(kelvin):
  return kelvin - 273.15

def kelvin_to_fahrenheit(kelvin):
  return (kelvin * 9/5) - 459.67

def main():
  temperature = float(input("Enter temperature value: "))
  unit = input("Enter unit (C for Celsius, F for Fahrenheit, K for Kelvin): ").upper()

  if unit == "C":
    fahrenheit = celsius_to_fahrenheit(temperature)
    kelvin = celsius_to_kelvin(temperature)
    print(f"{temperature} degrees Celsius is equal to:")
    print(f"{fahrenheit:.2f} degrees Fahrenheit")
    print(f"{kelvin:.2f} Kelvin")
  elif unit == "F":
    celsius = fahrenheit_to_celsius(temperature)
    kelvin = fahrenheit_to_kelvin(temperature)
    print(f"{temperature} degrees Fahrenheit is equal to:")
    print(f"{celsius:.2f} degrees Celsius")
    print(f"{kelvin:.2f} Kelvin")
  elif unit == "K":
    celsius = kelvin_to_celsius(temperature)
    fahrenheit = kelvin_to_fahrenheit(temperature)
    print(f"{temperature} Kelvin is equal to:")
    print(f"{celsius:.2f} degrees Celsius")
    print(f"{fahrenheit:.2f} degrees Fahrenheit")
  else:
    print("Invalid unit entered.")

if __name__ == "__main__":
  main()



import requests  
from bs4 import BeautifulSoup  
import pandas as pd  

# URL of the e-commerce website (replace with the actual URL)  
url = 'https://example.com/products'  

# Send a GET request to the website  
response = requests.get(url)  

# Parse the HTML content  
soup = BeautifulSoup(response.text, 'html.parser')  

# Lists to store the scraped data  
product_names = []  
product_prices = []  
product_ratings = []  

# Find the product elements (update the selectors based on the website's structure)  
for product in soup.find_all('div', class_='product'):  
    name = product.find('h2', class_='product-name').text  
    price = product.find('span', class_='product-price').text  
    rating = product.find('span', class_='product-rating').text  
    
    product_names.append(name)  
    product_prices.append(price)  
    product_ratings.append(rating)  

# Create a DataFrame  
data = {  
    'Name': product_names,  
    'Price': product_prices,  
    'Rating': product_ratings  
}  
df = pd.DataFrame(data)  

# Save to CSV  
df.to_csv('products.csv', index=False)  

print("Data has been scraped and saved to products.csv")
